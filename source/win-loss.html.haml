%h2
  Top players' win/loss chart

:css
  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }

  .bar {
    fill: steelblue;
  }

  .x.axis path {
    display: none;
  }

  .legend line {
    stroke: #000;
    shape-rendering: crispEdges;
  }
#win-loss-chart

%script(src='javascripts/win-loss.js')
:javascript
  var margin = {top: 20, right: 100, bottom: 30, left: 40},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var x = d3.scale.ordinal()
      .rangeRoundBands([0, width], .1);

  var y = d3.scale.linear()
      .rangeRound([height, 0]);

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left")
      .tickValues([0, 20, 40, 60, 80, 100])
      .tickFormat(d3.format("d%"));

  var svg = d3.select("#win-loss-chart").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  d3.json('data/roger_federer_win_loss.json', function(resp) {
    var data = resp.data

    x.domain(data.map(function(d) { return d[0]; }));
    y.domain([0, 150]);

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

    var year = svg.selectAll(".year")
        .data(data)
      .enter().append("g")
        .attr("class", "year")
        .attr("transform", function(d) { return "translate(" + x(d[0]) + ",0)"; });

    year.selectAll(".win")
        .data(function(d) { return [d]; })
      .enter().append("rect")
        .attr("class", 'win')
        .attr("width", x.rangeBand())
        .attr("y", function(d) { return y(d[1]); })
        .attr("height", function(d) { return y(0) - y(d[1]); })
        .style("fill", function(d) { return '#f54'; });

    year.selectAll(".loss")
        .data(function(d) { return [d]; })
      .enter().append("rect")
        .attr("class", 'loss')
        .attr("width", x.rangeBand())
        .attr("y", function(d) { return y(d[1] + d[2]); })
        .attr("height", function(d) { return y(d[1]) - y(d[1] + d[2]) - 1; })
        .style("fill", function(d) { return '#495'; });

    // Win percentage
    year.selectAll(".percentage")
        .data(function(d) { return [d]; })
      .enter().append("circle")
        .attr("class", 'percentage')
        .attr("r", 3)
        .attr("cx", function(d, i) { return 35; })
        .attr("cy", function(d) { return y(50 + 100 * d[1] / (d[1] + d[2])); })
        .style("fill", function(d) { return '#65d'; });

    year.append("text")
        .text(function(d) { return d3.format('%d')(d[1] / (d[1] + d[2])); })
        .attr("x", function(d, i) { return 20; })
        .attr("y", function(d) { return y(50 + 100 * d[1] / (d[1] + d[2])) - 10; });

    // Win percentage line
    var x1 = d3.scale.linear()
        .domain([0,data.length])   // Hack. Computing x-domain from 1st array
        .range([8, width]);

    var y1 = d3.scale.linear()
        .domain([0,150])  // Hack. Computing y-domain from 1st array
        .range([height, 0]);

    var line = d3.svg.line()
        .x(function(d,i) { return x1(i) + 35; })
        .y(function(d) { return y(50 + 100 * d[1] / (d[1] + d[2])); });

    var lines = svg.append('g')
        .attr('class', 'line')
        .append('path')
        .datum(data)
        .attr('d', line);
  });

